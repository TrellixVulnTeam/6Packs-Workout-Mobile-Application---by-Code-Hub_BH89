{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { UpdateTodoPage } from '../update-todo/update-todo.page';\nimport { AddWorkoutPage } from '../add-workout/add-workout.page';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"../services/data.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nfunction TodoworkoutPage_ion_item_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\", 7);\n    i0.ɵɵelementStart(1, \"ion-card\");\n    i0.ɵɵelementStart(2, \"ion-card-header\");\n    i0.ɵɵelementStart(3, \"ion-card-title\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-card-subtitle\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-card-content\");\n    i0.ɵɵelementStart(8, \"ion-label\", 8);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function TodoworkoutPage_ion_item_7_Template_ion_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.done(todo_r1.workout_id, i_r2);\n    });\n    i0.ɵɵtext(12, \"Done\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function TodoworkoutPage_ion_item_7_Template_ion_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.edit(todo_r1, i_r2);\n    });\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function TodoworkoutPage_ion_item_7_Template_ion_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const todo_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.delete(todo_r1.workout_id, i_r2);\n    });\n    i0.ɵɵtext(16, \"Remove\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const todo_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(todo_r1.workout_title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Repetitions: \", todo_r1.workout_reps, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Due: \", todo_r1.workout_date, \"\");\n  }\n}\n\nexport let TodoworkoutPage = /*#__PURE__*/(() => {\n  class TodoworkoutPage {\n    constructor(userService, dataService, toastController, modalController, router) {\n      this.userService = userService;\n      this.dataService = dataService;\n      this.toastController = toastController;\n      this.modalController = modalController;\n      this.router = router;\n      this.pop = false;\n    }\n\n    presentToast(message) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          message,\n          duration: 2000\n        });\n        toast.present();\n      });\n    }\n\n    addWorkoutModal() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: AddWorkoutPage\n        });\n        this.router.navigate(['/add-workout']);\n        return yield modal.present();\n      });\n    }\n\n    refreshPage() {\n      this.ionViewDidEnter();\n    }\n\n    ionViewDidEnter() {\n      let userObj = this.userService.getUser();\n      let account_id = userObj.userId;\n      this.dataService.request('getall', {\n        account_id\n      }).subscribe(res => {\n        var _a;\n\n        if (res.data) {\n          this.todos = res.data;\n\n          if (((_a = this.todos) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            this.pop = true;\n            this.presentToast('No Plan listed. Add Plans now.');\n          } else {\n            this.pop = false;\n          }\n        }\n      });\n    }\n\n    delete(workout_id, index) {\n      Swal.fire({\n        title: 'Are you sure?',\n        text: 'You won\\'t be able to retrieve this.',\n        icon: 'warning',\n        allowOutsideClick: false,\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(result => {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Plan Delete',\n            text: 'You have successfully deleted plan.',\n            showConfirmButton: false,\n            timer: 1600\n          });\n          this.dataService.request('deletetodo', {\n            workout_id: workout_id\n          }).subscribe(res => {\n            var _a;\n\n            if (res.data) {\n              this.todos.splice(index, 1);\n\n              if (((_a = this.todos) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n                this.pop = true;\n              } else {\n                this.pop = false;\n              }\n            }\n\n            this.presentToast('No Plan listed. Add plan now.');\n          });\n        }\n      });\n    }\n\n    done(workout_id, index) {\n      this.dataService.request('deletetodo', {\n        workout_id\n      }).subscribe(res => {\n        var _a; // console.log(res);\n\n\n        if (res.data) {\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Great Job!',\n            text: 'Plan is successfully completed. Add new plan again now.',\n            showConfirmButton: false,\n            timer: 1600\n          });\n          this.todos.splice(index, 1);\n\n          if (((_a = this.todos) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            this.pop = true;\n          } else {\n            this.pop = false;\n          }\n        }\n\n        this.presentToast('Great work! Plan completed.');\n      });\n    }\n\n    edit(todo_obj, index) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: UpdateTodoPage,\n          componentProps: {\n            todo_obj\n          },\n          cssClass: 'my-custom-class'\n        });\n        modal.onDidDismiss().then(data => {\n          const update_obj = data['data']; // console.log(update_obj);\n\n          if (update_obj) {\n            console.log(update_obj);\n            this.update(update_obj, index);\n          } else {\n            console.log('empty');\n          }\n        });\n        return yield modal.present();\n      });\n    }\n\n    update(update_obj, index) {\n      console.log(update_obj);\n      this.dataService.request('updatetodo', update_obj).subscribe(res => {\n        console.log(res);\n\n        if (res.error) {\n          this.presentToast(res.error);\n        } else if (res.data) {\n          this.todos[index] = update_obj;\n          Swal.fire({\n            position: 'center',\n            icon: 'success',\n            title: 'Plan Update',\n            text: 'Plan update success. Check the updated plan now.',\n            showConfirmButton: false,\n            timer: 1600\n          });\n        }\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  TodoworkoutPage.ɵfac = function TodoworkoutPage_Factory(t) {\n    return new (t || TodoworkoutPage)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i4.Router));\n  };\n\n  TodoworkoutPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TodoworkoutPage,\n    selectors: [[\"app-todoworkout\"]],\n    decls: 11,\n    vars: 1,\n    consts: [[\"color\", \"primary\"], [\"name\", \"refresh-outline\", 1, \"refresh-btn\", 3, \"click\"], [1, \"ion-text-center\"], [\"lines\", \"none\", 4, \"ngFor\", \"ngForOf\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [3, \"click\"], [\"name\", \"add\", \"defaultHref\", \"/add-workout\"], [\"lines\", \"none\"], [1, \"date\"], [\"color\", \"success\", 1, \"done\", 3, \"click\"], [\"color\", \"light\", 3, \"click\"]],\n    template: function TodoworkoutPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\");\n        i0.ɵɵelementStart(1, \"ion-toolbar\", 0);\n        i0.ɵɵelementStart(2, \"ion-icon\", 1);\n        i0.ɵɵlistener(\"click\", function TodoworkoutPage_Template_ion_icon_click_2_listener() {\n          return ctx.refreshPage();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"ion-title\", 2);\n        i0.ɵɵtext(4, \"My Workout Plans\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-content\");\n        i0.ɵɵelementStart(6, \"ion-list\");\n        i0.ɵɵtemplate(7, TodoworkoutPage_ion_item_7_Template, 17, 3, \"ion-item\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-fab\", 4);\n        i0.ɵɵelementStart(9, \"ion-fab-button\", 5);\n        i0.ɵɵlistener(\"click\", function TodoworkoutPage_Template_ion_fab_button_click_9_listener() {\n          return ctx.addWorkoutModal();\n        });\n        i0.ɵɵelement(10, \"ion-icon\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.todos);\n      }\n    },\n    directives: [i3.IonHeader, i3.IonToolbar, i3.IonIcon, i3.IonTitle, i3.IonContent, i3.IonList, i5.NgForOf, i3.IonFab, i3.IonFabButton, i3.IonItem, i3.IonCard, i3.IonCardHeader, i3.IonCardTitle, i3.IonCardSubtitle, i3.IonCardContent, i3.IonLabel, i3.IonButton],\n    styles: [\"ion-toolbar[_ngcontent-%COMP%]{--ion-font-family:\\\"barlow-font-lighter\\\"}.date[_ngcontent-%COMP%]{float:right;font-size:14px!important}.done[_ngcontent-%COMP%]{width:125px!important}ion-title[_ngcontent-%COMP%]{margin-left:15px}.refresh-btn[_ngcontent-%COMP%]{float:right;position:relative;font-size:28px;margin-right:15px}ion-card-title[_ngcontent-%COMP%]{--ion-font-family:\\\"barlow-font-regular\\\";font-size:22px}ion-card-content[_ngcontent-%COMP%], ion-card-subtitle[_ngcontent-%COMP%]{font-size:16px}ion-button[_ngcontent-%COMP%]{float:right;border:none!important;--box-shadow:none;margin-top:5px;margin-bottom:10px;text-transform:none;font-size:14px;--ion-font-family:\\\"barlow-font-lighter\\\"}ion-icon[_ngcontent-%COMP%]{font-size:16px}\"]\n  });\n  return TodoworkoutPage;\n})();","map":null,"metadata":{},"sourceType":"module"}